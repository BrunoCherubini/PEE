{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.3"
    },
    "colab": {
      "name": "CART_example.ipynb",
      "provenance": []
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "sdTq-EeL6ENY",
        "colab_type": "code",
        "outputId": "da9492e5-ef05-4b3b-e35d-42ed2596da76",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        }
      },
      "source": [
        "# CART\n",
        "# https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html\n",
        "# https://archive.ics.uci.edu/ml/machine-learning-databases/iris/\n",
        "\n",
        "\n",
        "from sklearn.model_selection import cross_val_score\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>sepal_length</th>\n",
              "      <th>sepal_width</th>\n",
              "      <th>petal_length</th>\n",
              "      <th>petal_width</th>\n",
              "      <th>species</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Iris-setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4.9</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Iris-setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4.7</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Iris-setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.6</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Iris-setosa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>Iris-setosa</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   sepal_length   sepal_width  petal_length  petal_width      species\n",
              "0           5.1           3.5           1.4          0.2  Iris-setosa\n",
              "1           4.9           3.0           1.4          0.2  Iris-setosa\n",
              "2           4.7           3.2           1.3          0.2  Iris-setosa\n",
              "3           4.6           3.1           1.5          0.2  Iris-setosa\n",
              "4           5.0           3.6           1.4          0.2  Iris-setosa"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nbt90939A_HC",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# preprocessing # blob # raw\n",
        "train = pd.read_csv('https://github.com/polivio/PEE/raw/master/Training_grouped.csv')\n",
        "test = pd.read_csv('https://github.com/polivio/PEE/raw/master/Test_grouped.csv')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RWBzDyvSBHLf",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "X09N6m7i6ENc",
        "colab_type": "code",
        "outputId": "f772bc8f-8283-433e-8cab-f3e7fae19a0c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        }
      },
      "source": [
        "from sklearn import tree\n",
        "\n",
        "X = np.array(df.drop(['species'], 1))\n",
        "y = np.array(df['species'])\n",
        "\n",
        "# X - features, y - lables\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.99)\n",
        "\n",
        "\n",
        "# Classifiers\n",
        "clf = DecisionTreeClassifier(max_depth = None)\n",
        "\n",
        "clf.fit(X_train , y_train)\n",
        "\n",
        "accuracy = clf.score(X_test, y_test)\n",
        "\n",
        "print(cross_val_score(clf, X, y, cv=5))\n",
        "print(cross_val_score(clf, X, y, cv=5).mean())\n",
        "\n",
        "tree.plot_tree(clf.fit(X_train , y_train))\n",
        "\n",
        "\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[0.96666667 0.96666667 0.9        0.93333333 1.        ]\n",
            "0.9600000000000002\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(167.4, 108.72, 'gini = 0.0\\nsamples = 1\\nvalue = 1.0')]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 26
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nCAgIQM+ePeHs7Axzc3M8fvwYBQUFSE1NRVJSEmJiYlBUVCSpX4VCgR49eqB79+7o2rUrHBwcYGNj\nAwDIz8/H9evXER0djdjYWE69O3fuYOLEiYiNjYWZmZmkvtPT0zF37tzq272tra0xatQoDBo0CK1b\nt0ZxcTGSkpKwc+dO3Llzh1N3yZIlCAwMxDPPPIOXX34Zly9frn5t0KBBCAgIgIuLC8zMzHD79m38\n/vvvOHXqFKeNS5cu4YsvvsDSpUslxb9r1y58++231c+trKwQGBiI/v37w9HREY8ePcKVK1ewd+9e\n3L17l1M3Li4OQUFBOHbsGBQKhaT+1VFaWophw4bh7NmzvNe6desGf39/eHl5wc7ODhUVFbh37x5O\nnz6NyMhIlJWVVW975coVjB49GmfPnq3z/zsrKwszZ85ERUUFp9zS0hLDhw+Ht7c3XFxcYGlpidLS\nUhQUFCA9Pb36e/zw4UPtvXnStEn9pdD0AS3s4Qv90r733nusqKio3rolJSUsMjKSjR8/ngUFBdW7\nfXBwMPP392ebNm1i2dnZasWXkpLCRo4cyYtx2bJlatVnjL+X2rx58+p/T5s2jT148ECwnlKpZCEh\nIbz6kydPZqtWrap+7unpyaKjo2vtf/v27byjCUtLS6ZUKuuNXWgP38zMrPrfEyZMqDX+8vJytmzZ\nMsG93tWrV0v67NTdw3/rrbd4db29vev8nBhj7Pbt22zs2LG8uq+//nqd9T766CNenbCwMJabm1tv\nrBUVFezEiRNs2rRprG/fvmq9P034+flpdBQi9eHq6qrz96YuQ97DN+iE37JlS86HPn36dEntqPMD\nIXY8topKpWKvvvoqJ842bdqw0tJSterX9gfw/vvv11u3oqKCdzK2efPm1ec7evXqpVZS+eqrr3j9\nb9y4sd56Qgm/6jFjxgy13v+GDRuYQqHg1LW2tmY5OTn11pWS8A8fPsyrN2nSJFZeXq5WvIwx9uab\nb3LqGxsbs1u3btW6vbe3N2f7YcOGMZVKpXZ/VdT5HmuKEj4lfL0k/IKCAt6HXt8emL48fvyYd1XP\nb7/9plZdoS//0KFD1U4I+/btE2zD3Nxc7fMJpaWlvB/XkJCQeuvVlvC9vLxEJdBZs2bx2li5cmW9\n9aQk/JoJzcfHh1VUVKgdK2NPfmhrnh+ZPXt2rdvb29tztt26dauo/hoSJXzDTvgGO4ZfWFjIK2vZ\nsqUeIqmfmZkZgoOD8c0331SXxcTEICgoSFJ7y5cvV3sMe+TIkTAzM0NJSQmnPCwsDF26dFGrDVNT\nU7z44ovYuHFjdVlCQoL6AdewcuVKUdeOL1++HFu2bEFxcXF12S+//IL58+dLjkHI+fPnceLECU7Z\nd999B2NjY1HtGBsbY/HixZg0aVJ12cGDB7F69WrB7Wt+lxvr9xgAOnXqhEePHjV4v05OTg3eZ1Nk\nsAnf3t4eCoWi6mgBABAdHa12EmtozzzzDOe50AlBdXh6emLAgAFqb29mZoYuXbrw5v6YNm2aqH57\n9erFSfjXr18XVb+Ks7MzAgICRNVp2bIlgoKCsH37dk7/6enpWl10Yt++fZznnTt3xsCBAyW1NWLE\nCM7z27dvIy0tDW5ubrxtW7Zsifv371c/j46OFv0ZNZR169bpOwSiAYNN+GZmZujevTsuXbpUXbZo\n0SJ4eHhg0KBBOu+/tLQUp06dQkJCApKSkpCTk4OCggIolUreajjAk7tJn3b79m1J/Q4ePFh0HVdX\nV07Ct7CwQO/evUW38bTKykoolUpYWVmJaicwMFDSFTZjx47lJHzgyY+mNhP+yZMnOc81+R7Z2dmh\nRYsWnL3hhIQEwYTfr18/HDx4sPr5ypUr4e3tLfkIkJDaGGzCB54MS7z77rvVz3NycjB48GCMGDEC\nU6ZMwciRI9GiRQut9pmWlobPP/8cu3fv1ujQVmrdTp06ia5TMym7urqKvh1fKLHn5+eLTvh9+vQR\ntX0VoR+oCxcuYOLEiZLaq6miogJxcXGcssjISPTq1UtymzUv+83JyRHcLiwsjJPwHz9+jDFjxmDw\n4MEIDQ3F6NGj4ejoKDkOQqoYdMJ/4403sGXLFly4cKG6jDGGyMhIREZGwsjICD169ICvry8GDRoE\nf39/jcYCv/nmG3zwwQd4/PixxrHn5+dLqlc1RasYJiYmWm8DgKSl3zp37iy6DgC4u7vD2NgYlZWV\n1WXZ2dmS2hKSk5OD0tJSTllWVhaysrK01kfNo7wqY8aMwahRo/DHH39wyk+fPo3Tp08DeDKU5+vr\ni4EDB8Lf3x8dO3bUWlxEPgx6ARQzMzMcOnQIQ4YMEXxdpVIhISEBP/74I1555RW0a9cOHh4e+PDD\nD0WPQS9duhTz58/XSrIHwElcYgglXn20IZWtra2kegqFAtbW1pwybZ48rC0Za1Nt3x2FQoEdO3Zg\n3Lhxtda9evUq1q1bhxkzZsDd3R2urq549913cfHiRV2FS5ogg074AODo6IioqCiEh4eja9eu9W5/\n7do1fPrpp/D09ERISAjvblQhx44dwyeffMIrb9WqFV577TVs2rQJMTExnFkNa14OFR4eLun9NTWW\nlpZaq6tUKjUNp5o+rjx5mpWVFfbu3YvffvsN/fr1q3f7jIwMfPvtt+jTpw9GjhyJq1evNkCUxNAZ\n9JBOFSMjI4SFhSEsLAzx8fGIjIxEVFQUzp49W+v0CSqVCjt27MCRI0cQERFR55UvNS//UygUWLJk\nCZYsWaL2FAnaOjIwdFKnsxCqK/b8QV3Mzc15ZYsWLcKKFSu01oc6goKCEBQUhKtXryIiIgJRUVGI\niYmp8wfpzz//xMmTJ7Ft2zadn+idOXMm4uPjddqHECcnJxw6dKjB+21qmkTCf1rVcmQffvghKisr\nkZCQgJMnT+Lw4cM4fvw4b5w2NzcXo0ePxpUrV9C6dWtee9euXeNdcz537lzBPf660HwnT0g9d8EY\n412vrs0T8kLXvjfEME9tPD094enpiQULFoAxhuTkZJw4cQJ///03Dh8+zDu6KS4uRkhICOLi4uDl\n5aWzuFJTU/WyvJ++j8CaCoMf0qmLsbExvL29MW/ePERGRiIrKwvffvst7487JycHX375pWAbR48e\n5bW5ePFi0bGkpaWJrtMUSb1+/+bNm7zzHkI/0FK1atWKd7loRkaG1trXhEKhgJeXF958803s3bsX\n2dnZWL9+Pdq3b8/Z7vHjx/joo4/0FCUxBE064ddka2uLd955B7GxsdWzW1apedNNlczMTM7zZ555\nRlKiOXPmjOg6TZHUk4xC9aRe4inE3Nwc3bp145TFxsYK3lOhb+bm5pg2bRrOnz/Puz/i0KFDvLuq\nCakiq4RfpVOnTpgxYwanLC0tjXPrfpXc3FzOc3t7e9H9Xb16FVeuXBFdryk6ePAg5+5odf3222+8\nsv79+2sjpGrDhg3jPM/Pz8exY8e02oc2tWrVinMfCvBkL//WrVs66zMqKkovc2+lp6fr7D3JiSwT\nPgDBKRiExpdrLmhc8wdAHatWrRJdp6m6ffs2Dh8+LKpObm4uDhw4wCnr3LmzVu+yBYDRo0fzymob\n6mss1P0eEwLIOOHfu3eP81yhUAieuGvbti3n+bVr10SN7UZHR9P8IzUsWLBA1H0IH3zwAe8KnVmz\nZmk7LDz77LO8o4YjR4406v+/mt9j4MmePyFCDDbhnzlzBj/88IOky/yUSiU2bdrEKevSpQtMTU15\n2/r6+vLK1D1pm5ycjJdeeqlRjgPr0+XLlzF79my1tt26dSt+/vlnTpm1tTVCQ0N1ERo+/vhjXtlb\nb72FnTt3SmqvuLgYq1atwvqEBnyNAAAXK0lEQVT16wVfT01NxaeffirpiqDKykreZ2NjYwMXFxdJ\nsZKmz2ATflZWFubMmYP27dtjzpw5OHnypFqJ9caNGwgICOBdNfP0VLZPGzBgAJydnTll27Ztw+zZ\ns2s9OcYYw4YNG/Cf//yneg+s5kliuaq6b+Hnn39GSEhIrUNkFRUV+OyzzxAWFsYb8//888/h4OCg\nk/hGjBiBOXPmcMpKS0vx8ssvY/r06bh582a9bTDGEBMTg7lz58LV1RXz5s3jLddYRalU4sMPP0T7\n9u0xY8YMREZGqjVlxd27dzFu3DjeMprBwcGCOy6EAE3gOvyHDx/ihx9+wA8//ICWLVvC29sbvXv3\nRvv27WFnZ4fmzZujsLAQt27dQnR0NE6cOMEbTujQoQPeeecdwfabNWuG999/H2+++San/KeffsKe\nPXswYcIE9O7dGzY2NsjNzUVKSgoOHDjA+UFp1aoV/u///g+LFi3S/gdgYD766KPqI6QdO3YgIiIC\nQUFBnDVtk5OTsWfPHsG7oP39/Xn/F9r29ddfIzk5mXdJbnh4ODZt2oR+/frBz88Prq6usLe3R3l5\nOR49eoS7d+/iwoULiI+Pr3WitNoUFxdj/fr1WL9+PWxsbNCnTx/07t0bbm5usLOzg7m5OYqLi5Ge\nno6zZ8/i6NGjvHtKbG1tsWzZMo3fv9ytXbsWa9eurfV1oSHdF154oc4fWk3Wj9AqfZxxZ1pY8Wr/\n/v1aWUmnVatW7Pz583X2pVKpWGBgoKT2LS0t2ZkzZ1h4eDjvNXXUrKPuuqxPq7lCj5+fn+g2hFav\nqm+Vn9rqzJkzR9Jn6ePjw/Lz89WOWZPPrqSkhM2YMUNrKzZ98skngv1cvHhRK+1bWFiwP//8U+33\nR2ontMawpg9t+rc9SXnXYId0bG1t0bx5c43a8Pf3R0xMTL3XcysUCmzbtg0vvfSSqPbd3Nxw8uRJ\nUQuWyMGqVavw3nvviZoXf+zYsfjrr78abGisefPmWLduHTZu3Mi71l0sX19f+Pv7C75mYWHBmxRO\nrJ49e+LEiRONdtEU0ngYbMIfOnQocnNzsXfvXsyaNQteXl5qJRAzMzOMGzcOv//+O44fP672/PKW\nlpbYtWsXdu7ciZ49e9a5bYcOHfD5558jKSlJqzcHNRUKhQKff/45Tp8+jYCAABgZCX8NFQoFfH19\nsX//fuzbt0/StM6amjp1Km7cuIH//e9/GDZsmOCcOzWZmZlh2LBhWLFiBa5fv47Tp0/XunBN586d\nkZOTg8jISMyZMwd9+vRRa0nFZs2aISAgAFu3bsWFCxfQt29f0e+NyI+CSbgJRisdKxRM230XFBTg\n+vXruHnzJrKzs6FUKsEYg7W1NVq2bAkvLy907dpVK9MDZ2RkICYmBvfv34dSqYSFhQWcnZ3Rs2fP\nRrvMYkOLiorC0KFDOWVpaWm86+dzc3Nx5swZ3Lx5E0qlEra2tnBycoKPjw9v+gB9Ky0tRXx8PDIz\nM5GTk4NHjx6hefPmsLa2Rps2beDh4QF3d3fRC8w8rbi4uPp7fP/+fRQWFqKyshLW1taws7ODh4cH\nunXrptaPD2l6/l3aVfyycWhiCZ80LuomfEKI+jRJ+AY7pEMIIUQcSviEECITlPAJIUQmKOETQohM\nUMInhBCZoIRPCCEyQQmfEEJkghI+IYTIBN14RQghBoRuvCKEEFIvSviEECITlPAJIUQmKOETQohM\nUMInhBCZoIRPCCEyQQmfEEJkghJ+E/bxxx9DoVBUP2jhEULkTfo6bIQQYuDS09Nx/vx5ZGRkoKio\nCObm5mjXrh169eoFDw8PfYendZTwCSGilZaWIjExEfHx8YiLi0NcXByuXr0KlUrF2a4xLmlZUVGB\n9evXY/Xq1bh8+XKt23Xs2BFvvPEGZs+e3WTWD6aETwipl1KpxM6dO6uT++XLl1FeXq7vsES7du0a\nJkyYgEuXLtW77a1bt7BgwQL89NNP2L59O/r3798AEeoWJXxCSL1SU1Mxc+ZMfYehkfj4eDz33HPI\nz88XVS8tLQ1+fn747bffMGLECB1F1zAo4RNCmrzMzEyMHDmSl+yNjIwwevRoDB48GM7Ozrh//z7O\nnTuHPXv2cI5gSktLMX78eJw9exbdunVr6PC1hhI+IUQyhUIBd3d3+Pj4IDk5GYmJifoOSVBYWBhy\ncnI4Ze7u7jhw4AC8vLx4269YsQLjxo3D+fPnq8uKi4sREhKCixcvolkzw0yddFkmIURtzs7OGDt2\nLJYvX47Dhw8jNzcXN27cwLZt29CrVy99hydo//79+Pvvvzllzs7OiI6OFkz2AODi4oKoqCj07NmT\nU56UlIQ1a9boLFZdM8yfKUJIg+rcuTPu3buHNm3a6DsU0ZYvX84rW7NmDRwdHeusZ2VlhfDwcPTr\n1w8VFRXV5V9++SVef/11mJiYaD1WXaM9fEJIvSwsLAwy2V+4cAHx8fGcsgEDBuDFF19Uq37v3r0x\nfvx4TllmZiYiIyO1FmNDoj18PSkuLsa1a9eQkpKCnJwcFBYWonnz5rC3t4ejoyP69esHBwcHfYfZ\nqJSVleHcuXO4c+cOsrOzUVhYiJYtW6J169bo06cPXF1d9R0iaWR27tzJK3v11VdFtTFz5kxeOzt2\n7EBgYKBGsekFY0wvjyddN4zNmzczAJxHRESERm1u2LCB12ZkZGSddWJiYtiiRYtYv379mLGxMa9+\nzYenpyf76quvWGFhoaQYP/roI057rq6u9dYJDw/nxSGFttphjLHff/+dBQYGMisrqzo/ry5durBP\nP/1U8udFNBMaGsr7P0lLS9NrTD179uTEo1AoWG5urqg2Kisrma2tLacdBwcHplKpdBR13f79W5KW\nd6VW1PTRkAm/qKiIWVtbc/7DJkyYoFGbQ4cO5bTXtm1bVlFRIbjtxYsXmZubW70JvraHvb09O3jw\noOgYDT3hJyQksCFDhoj+vFq3bs327t0rKW4iXWNL+AUFBUyhUHDi6dq1q6S2RowYwXtvV65c0XLE\n6tEk4ctiDN/CwgLBwcGcsoMHD4q+AaPK7du3ERUVxSmbPHkyjI2NBbfPzMxEWlqapL4AIC8vD0FB\nQfjhhx8kt2FoIiIi4Ovri1OnTomum52djeDgYHz11Vc6iIwYioSEhKqdy2oDBgyQ1NbAgQN5ZRcv\nXpTUlj7JZgw/NDQU4eHh1c9LSkqwc+dOzJo1S3Rbmzdv5n2RQkND1a7ftm1beHt7o2vXrujQoQOs\nra1hbm6OwsJC3LlzBxcvXsSff/6JoqKi6jqMMcybNw+9e/fG4MGDRcdsSPbu3YuJEyeisrKSU25h\nYYHnn38e/fr1Q9u2bWFlZYVHjx4hKSkJhw4dwo0bN6q3ZYxh4cKFaNeuHSZNmtTQb4E0AteuXeOV\ndezYUVJbQvWE2m/0pB4aaPpAAw7pMMaYSqViHTp04ByS+fr6SmqrS5cunHa8vb3r3P73339n7du3\nZ8uWLWOJiYlq9VFUVMQ+++wz1rx5c05f7u7urLKyUq02DHFI5+bNm8zGxoZTz9TUlC1btow9evSo\n1noqlYpt27aNtWjRglPXysqKpaamSnoPYvj5+UkestPkoc7/aUNpbEM6S5Ys4cWzadMmSW2dOHGC\n19bkyZO1HLF6QEM69VMoFJg6dSqnLDo6Gjdv3hTVztmzZ3m/7PXt3fv7+yMtLQ1Lly5Fjx491OrH\nwsIC77//PiIjIznX+968eRMRERGiYjYkU6dORUFBQfVzGxsbnDhxAkuXLoWtrW2t9RQKBUJCQnDm\nzBnY2dlVlyuVSnz22Wc6jZk0Tvfv3+eVtW/fXlJbzs7OvLKsrCxJbemTbBI+AF7CB4BNmzaJaqPm\n9iYmJggJCamzjpWVVa3j+/UZOnQo5s2bxyl7emiqKYmKikJ0dDSnbMuWLaLGXT08PPDzzz9zyrZu\n3Yq7d+9qJUZiOB4+fMgrs7KyktSWUL28vDxJbemTbMbwgSdzZwwePBinT5+uLtu8eXP1ylD1KSsr\nw44dOzhlo0aN0vn18pMnT8aXX35Z/TwmJkan/enL119/zXn+/PPPY/To0aLbCQ4ORpcuXaqPxMrK\nyhAZGYkZM2ZoJU4hnTp1wqNHj3TWfm2cnJwavE9D8fQ5sCpmZmaS2hKaD7+4uFhSW/okq4QPPBl+\neTrhp6Wl4dSpU/jPf/5Tb92IiAjer7qYk7VSPfPMM5zn2dnZSE9Pb3QLS2iiuLgYf/31F6csLCxM\nUlsKhQIjRozgDL2dPHlSpwl/3bp1OmubSCM0X7/UhC9Ur6ysTFJb+iS7hD9hwgTMmTMHjx8/ri7b\nuHGjWgm/5nCOg4MDRo0aJSmOpKQknDt3DomJicjIyEBBQQEKCgrUXlTi9u3bTSrhnzlzhvfeBw0a\nJLk9Nzc3zvOEhATJbZGmQ50jeXXrsRpX6hkC2SV8GxsbjB07Ftu2basu27NnD1avXl3nMmY5OTk4\ndOgQpywkJETUBErl5eVYvXo11q1bh+TkZPHBP0Ufwwe6JDRMFRQUJLm9mkdiNafGJU2f0N/m0zt6\nYgjVMzU1ldSWPsku4QNPhmGeTvgFBQXYv39/nddrb9++nbcHKmY458KFC5g8eTKuXr0qPmABUm8a\na6zu3LnDK9Pm3OqGeIKNaMbCwoJXVlJSIqktoYQv1H5jJ6urdKo899xzaNeuHaesvqt1ar7u5eUF\nb29vtfq7cOEChg0bprVkD4AzXWtToOuELPUPnRgue3t7XplSqZTUltAJ4JYtW0pqS59kmfCNjIww\nefJkTtnRo0dx7949we2vXr3Km2JV3b37srIyTJw4kTcEY2xsjFGjRmHlypU4cuQIUlJSkJeXh+Li\nYqhUKqEb1Zq0pjZERfRPaL77zMxMSW0J1atvPv3GSJZDOsCThP3FF19UP6+srMSWLVuwYMEC3rY1\n9+6NjY15Pxi1WbNmDVJTUzll/fv3x/bt23knFmsjddzRkAidP3n8+LHkqyoa2syZM3k7BQ3BycmJ\nd26JPCF0UUNGRoaktoTqqfv325jINuF7enrCx8cHcXFx1WWbNm3iJXyVSoUtW7ZwyoYPH462bduq\n1U/N6/ZdXFxw+PBh2NjYqB2r0A0kjZ26VxtVETo8zsvLM5jrzFNTU/WynisdGdWuS5cuvLJbt25J\nakuonlD7jZ0sh3Sq1ByWSUpKwoULFzhlx44d4x3OqTucU1hYiHPnznHK5syZIyrZA9Bopk2xhK5s\nEJu8ASA3N1fU9q1bt+aVSd0bIwQAevXqxbucMjY2VlJbQvV69+4tqS19knXCDwkJ4V1aVXP4puZz\nW1tbjBkzRq327969C5VKxSmTMtPlmTNnRNeRSujHqLCwUHQ7Yuco6tevH6+s5jQLhIhhY2OD7t27\nc8qSk5NFHzEzxnh/gy1btoSHh4fGMTY0WSd8e3t73q3727Ztq74CRqlUYt++fZzXJ0yYoPa4stBe\nrtCVA/XZvXu36DpSCU1QJuUw+OTJk6K2Hzp0KIyMuF/H/fv3i+5XX6KiovQy62x6erq+33qjFhAQ\nwHnOGMOBAwdEtXH8+HHej8Tw4cN531dDYHgRa1nN4ZkHDx5UL1C8d+9e3uVYYq69F7pOV+xQR2xs\nLG9YSJc6d+7MKxPb/8mTJ3H9+nVRdezs7ODr68spi46ObrLzBpGGMXHiRF7Zr7/+KqoNoWkzXn75\nZckx6ZPsE/7IkSN548cbN24EwB/O6dSpEy8p1UXoxO6RI0fUrl9WViZpgRZNtGnThneitOaJ57pU\nVlZi8eLFkvoWqjdjxgzJ104T4u3tjT59+nDKYmJiqnfq6pOYmIg9e/Zwytq1a4cXXnhBazE2JNkn\n/GbNmvHusI2IiEBiYiJvGUOh6ZXr4ujoCHd3d07Zd999V+v1/k8rLy/HK6+8gsuXL4vqUxtqHgaf\nOnVKrcNg9u+qXFL3ykeOHMmbCjklJQVBQUGSb8w6f/684F4eMRxRUVFQKBSch7+/v9r133//fV7Z\na6+9hgcPHtRZr6ioCNOmTeNdtLBgwQJRU6o0KvoYd2R6WPGqLhcvXuStZuPh4cF5rlAoJK3es2jR\nIl7bXbt2ZcnJybXWSUpK4izeXXMFKAAsPDy83r6lrHjFGGOnTp3i9WdlZcX++OOPWuv8888/bNy4\ncdXbm5mZSVrxKjU1ldnZ2fHqdujQgW3evLnWheKflpOTw37++efqVaiMjY3V6ptoRlcrXh0/fpzX\nrp+fn6g2/P39eW106tSp1oXIMzIymI+Pj+DfbllZmcbvSRPQYMUrBdPTXZwKhYLpq28hPXv2xKVL\nl2p93d/fH8ePHxfd7oMHD9CxY0fesISxsTFefPFF+Pv7w8nJCSUlJcjMzMSRI0dw6tQpznqu4eHh\nmDZtGqd+eHh4vdMHf/zxx1i2bFn1c1dXV7VP8o0YMYI3XTEA+Pn54YUXXkD79u2hUqlw7949nDhx\nAkeOHEFpaSmAJyem33nnHSxdupRTV93/7yNHjmDUqFGCl4M6Ojri2Wefhbe3N1q1agULCwvk5+cj\nLy8PKSkpiI+Px5UrVzifn7GxcZObikIf1q5di7Vr19b6ekZGBu/kpqenZ52TjKkzi2lUVBSGDh3K\nKfPz8+Mdgdfl9u3b6N27N+8cmpGREQIDAzFkyBA4OTkhKysLcXFx2LVrF+/7Z2ZmhtjYWPTs2VPt\nfnVBoVCAMSZt2k+pvxSaPtCI9vAZY+zrr7+uc+1Qdfaoa7N7926mUCgkrVk6f/58xhhr0D18xp7s\nsTs4OIiO18LCgp0+fVrjtXFPnz7N2rRpI+kzq/mgPXztqPl90sZDHdrYw2eMsdjYWMGjZXUepqam\nLCIiQnSfugAN9vBlP4Zf5ZVXXkGzZsI3HltaWiI4OFhy28HBwdiwYYOoaQJMTEywYsUKrFy5UnK/\nmnBxccGJEyd4k8zVpX379oiKihJ1Yrs2vr6+1ePvmlz+Zm9vj9mzZ2scDzF8/fv3x5kzZ9CtWzdR\n9VxdXREVFSV57YvGhBL+vxwdHXknK6uMHTtW8lqYVaZOnYqLFy9i0qRJdZ7wsbCwwJQpU5CYmIhF\nixZp1KemunbtiuTkZCxevLjOmQEdHBywZMkSJCUlwcfHR2v9Ozk5YceOHUhOTsYbb7yBjh07qlWv\nQ4cOePXVV7Fv3z7cvXsX3333ndZiIoata9euuHjxItasWQMvL686t3Vzc8MXX3yB5ORkDBw4sIEi\n1C0aw9eDoqIiREdH49atW8jLy4OxsXH1nXs+Pj5o3ry5vkPkUalUOHfuHFJSUvDgwQNUVFTAwcEB\n3bt3h4+Pj+RF2sX6559/cOnSJeTk5CA3NxdlZWWwsrJCixYt4O7uDk9PT0k3txF5SktLQ3x8PDIy\nMlBcXAwzMzM4OzujV69e8PT01Hd4gjQZw6eETwghBkSThE9DOoQQIhOU8AkhRCYo4RNCiExQwieE\nEJmghE8IITJBCZ8QQmSCEj4hhMgEJXxCCJEJSviEECITlPAJIUQmKOETQohMUMInhBCZoIRPCCEy\nQQmfEEJkghI+IYTIBCV8QgiRCUr4hBAiE5TwCSFEJijhE0KITFDCJ4QQmaCETwghMtFMXx2bmZll\nKRQKR331TwghhsjMzCxLal0FY0ybsRBCCGmkaEiHEEJkghI+IYTIBCV8QgiRCUr4hBAiE5TwCSFE\nJijhE0KITFDCJ4QQmaCETwghMkEJnxBCZIISPiGEyAQlfEIIkQlK+IQQIhOU8AkhRCYo4RNCiExQ\nwieEEJmghE8IITJBCZ8QQmSCEj4hhMgEJXxCCJEJSviEECITlPAJIUQmKOETQohMUMInhBCZoIRP\nCCEyQQmfEEJkghI+IYTIBCV8QgiRCUr4hBAiE5TwCSFEJijhE0KITFDCJ4QQmaCETwghMkEJnxBC\nZIISPiGEyAQlfEIIkQlK+IQQIhOU8AkhRCb+Hw8k1g8OXvzTAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8ExICtyv6ENf",
        "colab_type": "code",
        "outputId": "fd05dbb7-0c0f-4c40-fe3f-53afd7d00991",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "# example\n",
        "X_new = np.array([[ 5.0  ,  2.9 ,  1.0 , 0.2 ]])\n",
        "\n",
        "prediction = clf.predict(X_new)\n",
        "print(prediction)\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "['Iris-setosa']\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Zol0sB4T6ENi",
        "colab_type": "code",
        "outputId": "ce8629a9-47ee-48ce-924f-4341fb1cd3dc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        }
      },
      "source": [
        "df.plot(kind='bar') "
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fdeacb87470>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nv57rr78+1WYIIeo5DWY6oBBC1BfkuIUQ9ZKwzc2uCXLcQggRMlIX436wdYL17U6sPiGESFPU404C\nGzZsIDMz87CP37x5MyNHjqxw35AhQ8oXmnr44YcTlqcQIjzIcachJ598MtOmTatWLtpxCyEaDg3S\ncR88eJDrrruOzMxMevbsyaOPPgrA2rVrGT58OP369SM7O7t8Pevg1fL+/fvTuXNn3nnnHcD1crOz\ns+nbty99+/blk08+iSv/ESNGsGTJEgD69OnDhAkTALj//vt55plnDuk9FxUVcc0119CtWzcuv/zy\n8nW377nnHoqKisjKyuLaa68tP68bb7yRHj16cOGFF5bLCnG41OcBvjDTIOdxB6vyLVu2DIBdu3YB\n7g3FyZMn06lTJz777DPGjx/PRx99BDgnPW/ePNauXct5553HF198wfHHH88HH3xARkYGa9asYdSo\nUeVhjKrIzs5m1qxZnHbaaTRp0qT8zxRmzZr1rXVLnn76aVq2bMnKlStZsmRJ+VuTv/71r/nDH/5A\nbm5uuX1r1qzhpZde4plnnuHqq6/m9ddfZ/To0YkpNCFE2lCt4zbGdAFeidrUEbjfWvtY0qxKMh07\ndmTdunXccsstjBgxggsvvJCCggI++eQTrrrqqnK5/fsj/9B29dVX06hRIzp16kTHjh1ZtWoVHTp0\n4OabbyY3N5fGjRvz+eefx5V/dnY2jz/+OB06dGDEiBF88MEHFBYWsn79erp06cKGDRvKZT/++GNu\nvfVWAHr16kWvXr0q1duhQ4fylQb79et3iB4hRP2hWsdtrV0NZAEYYxoDm4A3k2xXUmnTpg2LFy9m\n+vTpTJ48mVdffZXHHnuMo48+urwHG0tF63M/+uijnHDCCSxevJiysjIyMjLiyn/AgAHk5OTQsWNH\nhg4dyvbt23nmmWfo169frc4rdj1vhUqEqJ/UNFTyPWCttfbLWuecwul727dvp1mzZlx55ZV06dKF\n0aNHc9RRR9GhQwdee+01rrrqKqy1LFmyhN69ewPw2muvMWbMGNavX8+6devo0qULu3fvpl27djRq\n1IjnnnuOgwcPxpV/s2bNOPXUU3nttde4//77yc/P56c//Sk//elPvyU7ePBgXnzxRc4//3yWLVtW\nHhsHaNq0KSUlJTRt2jQxBSOECAU1HZy8Bnipoh3GmHHGmBxjTE5+fn7tLUsimzZtYsiQIWRlZTF6\n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\nYgAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    }
  ]
}